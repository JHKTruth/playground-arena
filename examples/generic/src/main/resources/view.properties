#welcomeView.(class)=org.springframework.web.servlet.view.tiles2.TilesView
#welcomeView.url=welcome (this is the name of a Tiles definition)
#vetsView.(class)=org.springframework.web.servlet.view.tiles2.TilesView
#vetsView.url=vetsView (again, this is the name of a Tiles definition)

#Spring uses POI [brings back memories] for ExcelSheet manipulation
#xl.(class)=com.googlecode.jihoonPlaygroundArena.examples.generic.modelView.ExcelView

#Spring uses iText for PDF manilpulation
#pdf.(class)=com.googlecode.jihoonPlaygroundArena.examples.generic.modelView.PDFView
generalWelcome.(class)=org.springframework.web.servlet.view.JstlView
generalWelcome.url=/WEB-INF/spring/jsp/generalContent/welcome.jsp

generalRequireJs.(class)=org.springframework.web.servlet.view.JstlView
generalRequireJs.url=/WEB-INF/spring/jsp/generalContent/requireJs.jsp

html5MainVelocity.(class)=org.springframework.web.servlet.view.velocity.VelocityView
html5MainVelocity.url=generalContent/html5Main.vm

mySQLWelcome.(class)=org.springframework.web.servlet.view.tiles2.TilesView
mySQLWelcome.url=mySQLTileWelcome

mySQLViewUserInfo.(class)=org.springframework.web.servlet.view.tiles2.TilesView
mySQLViewUserInfo.url=mySQLTileViewUserInfo

#JasperReports (http://jasperreports.sourceforge.net) is a powerful open-source reporting engine that
#supports the creation of report designs using an easily understood XML file format. JasperReports is
#capable of rendering reports in four different formats: CSV, Excel, HTML and PDF.
#JasperReportsCsvView, JasperReportsHtmlView, JasperReportsPdfView, JasperReportsXlsView, JasperReportsMultiFormatView

#JasperReports has two distinct types of report file: the design file, which has a .jrxml extension, and
#the compiled report file, which has a .jasper extension. Typically, you use the JasperReports Ant task
#to compile your .jrxml design file into a .jasper file before deploying it into your application. With
#the Spring Framework you can map either of these files to your report file and the framework will take
#care of compiling the .jrxml file on the fly for you. You should note that after a .jrxml file is
#compiled by the Spring Framework, the compiled report is cached for the lifetime of the application.
#Thus, to make changes to the file you will need to restart your application.

#report.(class)=org.springframework.web.servlet.view.jasperreports.JasperReportsPdfView
#report.url=/WEB-INF/spring/reports/DataSourceReport.jasper
